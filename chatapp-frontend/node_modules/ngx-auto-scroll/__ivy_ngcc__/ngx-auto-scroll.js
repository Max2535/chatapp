import { Directive, ElementRef, HostListener, Input, NgModule } from '@angular/core';

import * as ɵngcc0 from '@angular/core';
class NgxAutoScroll {
    /**
     * @param {?} element
     */
    constructor(element) {
        this.lockYOffset = 10;
        this.observeAttributes = "false";
        this._isLocked = false;
        this.nativeElement = element.nativeElement;
    }
    /**
     * @return {?}
     */
    getObserveAttributes() {
        return this.observeAttributes !== "" && this.observeAttributes.toLowerCase() !== "false";
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.mutationObserver = new MutationObserver(() => {
            if (!this._isLocked) {
                this.scrollDown();
            }
        });
        this.mutationObserver.observe(this.nativeElement, {
            childList: true,
            subtree: true,
            attributes: this.getObserveAttributes(),
        });
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.mutationObserver.disconnect();
    }
    /**
     * @return {?}
     */
    forceScrollDown() {
        this.scrollDown();
    }
    /**
     * @return {?}
     */
    isLocked() {
        return this._isLocked;
    }
    /**
     * @return {?}
     */
    scrollDown() {
        this.nativeElement.scrollTop = this.nativeElement.scrollHeight;
    }
    /**
     * @return {?}
     */
    scrollHandler() {
        const /** @type {?} */ scrollFromBottom = this.nativeElement.scrollHeight - this.nativeElement.scrollTop - this.nativeElement.clientHeight;
        this._isLocked = scrollFromBottom > this.lockYOffset;
    }
}
NgxAutoScroll.ɵfac = function NgxAutoScroll_Factory(t) { return new (t || NgxAutoScroll)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
NgxAutoScroll.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgxAutoScroll, selectors: [["", "ngx-auto-scroll", ""]], hostBindings: function NgxAutoScroll_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("scroll", function NgxAutoScroll_scroll_HostBindingHandler() { return ctx.scrollHandler(); });
    } }, inputs: { lockYOffset: ["lock-y-offset", "lockYOffset"], observeAttributes: ["observe-attributes", "observeAttributes"] } });
/**
 * @nocollapse
 */
NgxAutoScroll.ctorParameters = () => [
    { type: ElementRef, },
];
NgxAutoScroll.propDecorators = {
    'lockYOffset': [{ type: Input, args: ["lock-y-offset",] },],
    'observeAttributes': [{ type: Input, args: ["observe-attributes",] },],
    'scrollHandler': [{ type: HostListener, args: ["scroll",] },],
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxAutoScroll, [{
        type: Directive,
        args: [{
                selector: "[ngx-auto-scroll]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { lockYOffset: [{
            type: Input,
            args: ["lock-y-offset"]
        }], observeAttributes: [{
            type: Input,
            args: ["observe-attributes"]
        }], 
    /**
     * @return {?}
     */
    scrollHandler: [{
            type: HostListener,
            args: ["scroll"]
        }] }); })();

class NgxAutoScrollModule {
}
NgxAutoScrollModule.ɵfac = function NgxAutoScrollModule_Factory(t) { return new (t || NgxAutoScrollModule)(); };
NgxAutoScrollModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxAutoScrollModule });
NgxAutoScrollModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[]] });
/**
 * @nocollapse
 */
NgxAutoScrollModule.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxAutoScrollModule, [{
        type: NgModule,
        args: [{
                declarations: [NgxAutoScroll],
                imports: [],
                exports: [NgxAutoScroll]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxAutoScrollModule, { declarations: [NgxAutoScroll], exports: [NgxAutoScroll] }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { NgxAutoScroll, NgxAutoScrollModule };

//# sourceMappingURL=ngx-auto-scroll.js.map