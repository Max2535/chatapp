import { ElementRef, EventEmitter } from '@angular/core';
import 'rxjs/add/operator/takeUntil';
import 'rxjs/add/operator/distinctUntilChanged';
import { CaretEvent } from '../lib/caret-event';
import * as ɵngcc0 from '@angular/core';
export declare class EmojiPickerCaretDirective {
    private _el;
    caretEmitter: EventEmitter<CaretEvent>;
    private _caretEvent$;
    private _destroyed$;
    private _lastCaretEvent;
    constructor(_el: ElementRef);
    private _win;
    readonly win: any;
    private _doc;
    readonly doc: any;
    ngOnInit(): void;
    ngOnDestroy(): void;
    updateCaretPosition(): void;
    updateCaretDueMutation(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<EmojiPickerCaretDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<EmojiPickerCaretDirective, "[emojiPickerCaretEmitter]", never, {}, { "caretEmitter": "emojiPickerCaretEmitter"; }, never>;
}

//# sourceMappingURL=emoji-picker-caret.directive.d.ts.map